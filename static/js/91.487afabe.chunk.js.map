{"version":3,"file":"static/js/91.487afabe.chunk.js","mappings":"6KAiBA,EAjBe,CACbA,SAAU,CACRC,KAAM,OACNC,KAAM,WACNC,UAAU,EACVC,MAAO,gBACPC,YAAa,iBAEfC,SAAU,CACRL,KAAM,WACNC,KAAM,WACNC,UAAU,EACVC,MAAO,gBACPC,YAAa,kBCRjB,EALqB,CACnBL,SAAU,GACVM,SAAU,I,8BCDZ,EAA0B,2BAA1B,EAA6D,yB,oCCiB7D,EAdkB,SAAC,GAAuC,IAArCF,EAAoC,EAApCA,MAAOG,EAA6B,EAA7BA,aAAiBC,GAAY,YAC/CC,GAAKC,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAN,GAAgB,IACnC,OACE,iBAAKC,UAAWC,EAAhB,WACE,kBAAOC,QAASL,EAAhB,SAAqBL,KACrB,0BACEQ,UAAWC,EACXJ,GAAIA,EACJM,SAAUR,GACNC,MAIb,EChBD,EAAsB,oBCStB,EARe,SAAC,GAAmC,IAAjCQ,EAAgC,EAAhCA,SAAgC,IAAtBf,KAAAA,OAAsB,MAAf,SAAe,EAC9C,OACE,mBAAQW,UAAWC,EAASZ,KAAMA,EAAlC,SACGe,GAGR,E,oBCeD,EAtBgB,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,SAC/B,GAA0BC,EAAAA,EAAAA,WAAS,UAAKF,IAAxC,eAAOG,EAAP,KAAcC,EAAd,KAEMd,GAAee,EAAAA,EAAAA,cACnB,YAAiB,IAAdC,EAAa,EAAbA,OACOrB,EAAgBqB,EAAhBrB,KAAMsB,EAAUD,EAAVC,MACdH,GAAS,SAAAI,GACP,OAAO,kBAAKA,GAAZ,cAAwBvB,EAAOsB,GAChC,GACF,GACD,CAACH,IASH,MAAO,CAAED,MAAAA,EAAOC,SAAAA,EAAUd,aAAAA,EAAcmB,aANnB,SAAAC,GACnBA,EAAEC,iBACFV,GAAS,UAAKE,IACdC,GAAS,UAAKJ,GACf,EAGF,ECpBD,EAAuB,wBC+BvB,EAxBkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,EAA8CW,EAAQ,CACpDZ,aAAAA,EACAC,SAAAA,IAFME,EAAR,EAAQA,MAAOb,EAAf,EAAeA,aAAcmB,EAA7B,EAA6BA,aAIrB1B,EAAuBoB,EAAvBpB,SAAUM,EAAac,EAAbd,SAElB,OACE,kBAAMM,UAAWC,EAAUK,SAAUQ,EAArC,WACE,SAAC,GAAD,QACEF,MAAOxB,EACPO,aAAcA,GACVuB,EAAAA,YAEN,SAAC,GAAD,QACEN,MAAOlB,EACPC,aAAcA,GACVuB,EAAAA,YAEN,SAAC,EAAD,sBAGL,E,oBCTD,EAfkB,WACd,IAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,iBAAKpB,UAAS,UAAKC,EAAAA,EAAAA,QAAL,cAAd,WACE,eAAID,UAAWC,EAAAA,EAAAA,MAAf,oBACA,SAAC,EAAD,CAAWK,SAPK,SAACe,GACjBF,GAASG,EAAAA,EAAAA,GAAMD,GAClB,MAQJ,C,qBClBD,KAAgB,QAAU,sBAAsB,MAAQ,oBAAoB,KAAO,mB,wDCAnF,IAkBItB,EAAS,WAGX,IAH0B,IAAdwB,EAAc,uDAAP,GACf1B,EAAK,GACL2B,EAAQC,OAAOC,gBAAgB,IAAIC,WAAWJ,IAC3CA,KAAQ,CACb,IAAIK,EAAqB,GAAdJ,EAAMD,GAEf1B,GADE+B,EAAO,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAET,CACD,OAAO/B,CACR,C","sources":["modules/LoginForm/fields.js","modules/LoginForm/initialState.js","webpack://assembly/./src/shared/components/TextField/textField.module.scss?b90a","shared/components/TextField/TextField.jsx","webpack://assembly/./src/shared/components/Button/button.module.scss?9580","shared/components/Button/Button.jsx","shared/hooks/useForm.jsx","webpack://assembly/./src/modules/LoginForm/loginForm.module.scss?8734","modules/LoginForm/LoginForm.jsx","Page/LoginPage.jsx","webpack://assembly/./src/Page/page.module.scss?58d1","../node_modules/nanoid/index.browser.js"],"sourcesContent":["const fields = {\n  username: {\n    type: 'text',\n    name: 'username',\n    required: true,\n    label: 'User username',\n    placeholder: 'User username',\n  },\n  password: {\n    type: 'password',\n    name: 'password',\n    required: true,\n    label: 'User password',\n    placeholder: 'User password',\n  },\n};\n\nexport default fields;\n","const initialState = {\n  username: '',\n  password: '',\n};\n\nexport default initialState;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"textField_wrapper__W42iq\",\"field\":\"textField_field__KMwGv\"};","import { nanoid } from \"nanoid\";\nimport { useMemo } from \"react\";\nimport css from \"./textField.module.scss\"\n\nconst TextField = ({ label, handleChange, ...props }) => {\n    const id = useMemo(() => nanoid(), []);\n    return (\n      <div className={css.wrapper}>\n        <label htmlFor={id}>{label}</label>\n        <input\n          className={css.field}\n          id={id}\n          onChange={handleChange}\n          {...props}\n        />\n      </div>\n    );\n}\nexport default TextField;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"button_btn__uXPTj\",\"hover\":\"button_hover__fZH3z\"};","import css from \"./button.module.scss\"\n\nconst Button = ({ children, type = \"submit\" }) => {\n    return (\n      <button className={css.btn} type={type}>\n        {children}\n      </button>\n    );\n}\n\nexport default Button;\n","import { useCallback, useState } from \"react\";\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = useCallback(\n    ({ target }) => {\n      const { name, value } = target;\n      setState(prevState => {\n        return { ...prevState, [name]: value };\n      });\n    },\n    [setState]\n  );\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"loginForm_form__Auooe\"};","import fields from './fields';\nimport initialState from './initialState';\nimport TextField from 'shared/components/TextField/TextField';\nimport Button from 'shared/components/Button/Button';\nimport useForm from 'shared/hooks/useForm';\n\nimport css from './loginForm.module.scss';\n\nconst LoginForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n  const { username, password } = state;\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <TextField\n        value={username}\n        handleChange={handleChange}\n        {...fields.username}\n      />\n      <TextField\n        value={password}\n        handleChange={handleChange}\n        {...fields.password}\n      />\n      <Button>Login</Button>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","import { useDispatch } from \"react-redux\";\nimport LoginForm from \"modules/LoginForm/LoginForm\";\nimport { login } from \"redux/auth/auth-operations\";\n\nimport css from './page.module.scss';\n\nconst LoginPage = () => {\n    const dispatch = useDispatch();\n\n    const handleLogin = (data) => {\n        dispatch(login(data))\n    }\n    \n    return (\n      <div className={`${css.wrapper} container`}>\n        <h1 className={css.title}>Login</h1>\n        <LoginForm onSubmit={handleLogin} />\n      </div>\n    );\n}\n\nexport default LoginPage;","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"page_wrapper__f-hWG\",\"title\":\"page_title__pwan3\",\"text\":\"page_text__9RBxz\"};","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n"],"names":["username","type","name","required","label","placeholder","password","handleChange","props","id","useMemo","nanoid","className","css","htmlFor","onChange","children","initialState","onSubmit","useState","state","setState","useCallback","target","value","prevState","handleSubmit","e","preventDefault","useForm","fields","dispatch","useDispatch","data","login","size","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase"],"sourceRoot":""}